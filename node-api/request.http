###

http://localhost:3333/testRoute1

###

http://localhost:3333/users/

###

http://localhost:3333/users/5345

###

http://localhost:3333/users/5346

###

http://localhost:3333/users/a

###
# example of a sql injection attack (where request sender adds some malicious sql to their request. If this had executed it would have deleted our users table. Thankfully we wrote our query in such a way that 'Drop users' will never be run as it's own SQL statement
http://localhost:3333/users/1;DROP TABLE users

###

POST http://localhost:3333/users/ HTTP/1.1
content-type: application/json

{
    "username": "MickJagger69",
    "phone": "6996697086"
}

###

POST http://localhost:3333/users/ HTTP/1.1
content-type: application/json

{
    "phone": "6996697086"
}

###

POST http://localhost:3333/users/ HTTP/1.1
content-type: application/json

{
    "username": "MickJagger69",
    "email": "micky6969@dirty.com"
}

###

POST http://localhost:3333/users/ HTTP/1.1
content-type: application/json

{
    "email": "micky6969@dirty.com"
}

###

DELETE http://localhost:3333/users/5348 HTTP/1.1
content-type: application/json

###

DELETE http://localhost:3333/users/asfwfwe HTTP/1.1
content-type: application/json


###

DELETE http://localhost:3333/users/1;DROP TABLE users HTTP/1.1
content-type: application/json

# ###

# ###

# POST http://localhost:3005/users/ HTTP/1.1
# content-type: application/json

# {
#     "username": "MickJagger69",
#     "bio": "I am Mick"
# }

# ###

# PUT http://localhost:3005/users/1 HTTP/1.1
# content-type: application/json

# {
#     "username": "MarcusSadFace9000",
#     "bio": "I am a sad Marcus"
# }

# ###

# PUT http://localhost:3005/users/4 HTTP/1.1
# content-type: application/json

# {
#     "username": "MarcusSadFace9000",
#     "bio": "I am a sad Marcus"
# }

# ###

# DELETE http://localhost:3005/users/1 HTTP/1.1
# content-type: application/json

# ###

# DELETE http://localhost:3005/users/4 HTTP/1.1
# content-type: application/json
